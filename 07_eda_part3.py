# -*- coding: utf-8 -*-
"""P3.S4.6

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W5TO5KHloCT2jdE0Odj_cnvEOzaz1P3J
"""

#Step 1
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load the dataset
df = pd.read_csv('Telco-Customer-Churn.csv')

# Display the first few rows
print(df.head())

# Ensure numeric data is ready for analysis
df['TotalCharges'] = pd.to_numeric(df['TotalCharges'], errors='coerce')

#Step 2

# Calculate the correlation matrix
correlation_matrix = df.select_dtypes(include=['number']).corr()

# Display the correlation matrix
print(correlation_matrix)

#Step 3
# Filter correlations above 0.5 or below -0.5
significant_correlations = correlation_matrix[(correlation_matrix > 0.5) | (correlation_matrix < -0.5)]
print(significant_correlations)

#Step 4

# Create vizualizations
plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f", vmin=-1, vmax=1)
plt.title("Correlation Matrix Heatmap")
plt.show()

# Scatter plot for MonthlyCharges vs TotalCharges
sns.scatterplot(x='MonthlyCharges', y='TotalCharges', data=df, alpha=0.6)
plt.title("Monthly Charges vs Total Charges")
plt.xlabel("Monthly Charges ($)")
plt.ylabel("Total Charges ($)")
plt.show()

# Save the correlation matrix as a CSV file
correlation_matrix.to_csv('correlation_matrix.csv', index=True)

### Correlation Analysis Headphones
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
df = pd.read_csv('merged_data.csv')
print(df.head())

df['review_length'] = df['content'].apply(len)

df['is_verified_numeric'] = df['is_verified'].astype(int)

df['timestamp_parsed'] = pd.to_datetime(
    df['timestamp'].str.extract(r'(\w+ \d{1,2}, \d{4})')[0],
    errors='coerce'
)

df[['rating', 'helpful_count', 'review_length', 'is_verified_numeric', 'timestamp_parsed']].head()

corr_matrix = df.select_dtypes(include= ['int64']).corr().round(2)
print(corr_matrix)

filtered_corr = corr_matrix[(corr_matrix > 0.5) | (corr_matrix < -0.5)]
print(filtered_corr)

sns.heatmap(corr_matrix,annot = True, cmap = 'coolwarm',vmin=-1, vmax=1)
plt.title('Correlation Matrix Heatmap')
plt.figure(figsize =(10,8))
plt.show()

sns.scatterplot(x = 'review_length',y = 'helpful_count', data = df)
plt.title("Review Length vs Helpful Count")
plt.xlabel("Review Length (characters)")
plt.ylabel("Helpful Votes")
plt.show()

corr_matrix.to_csv('correlation_matrix.csv', index=True)