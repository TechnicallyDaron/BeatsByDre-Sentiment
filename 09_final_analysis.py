# -*- coding: utf-8 -*-
"""P3.S4.12

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YuBk-gvZAvoNQouG50vlblm4xMmSU9Pd
"""

!pip install -q google-generativeai
import google.generativeai as genai
genai.configure(api_key="AIzaSyDyaY-E5qui_dN0BvsabnOGo51I06vHlE8")
generation_config = {
  "temperature": 1,
  "top_p": 0.95,
  "top_k": 64,
  "max_output_tokens": 8192,
  "response_mime_type": "text/plain",
}

model = genai.GenerativeModel(
  model_name="gemini-1.5-flash",
  generation_config=generation_config
)

chat_session = model.start_chat(
    history=[
        {
            "role": "user",
            "parts": [
                "You are a market research analyst specializing in consumer electronics.\n",
            ],
        }
    ]
)
response1 = chat_session.send_message("What are the key factors customers consider when buying headphones?")
print(response1.text)

response2 = chat_session.send_message("How would you analyze customer feedback about sound quality?")
print(response2.text)

import pandas as pd
df = pd.read_csv('sentiment_analysis_results.csv')
df.head()

reviews = df['content'].head(20).tolist()

def analyze_reviews(reviews, api_key, prompt_message):
    genai.configure(api_key=api_key)

    model = genai.GenerativeModel(
        model_name="gemini-1.5-flash",
        generation_config={
            "temperature": 1,
            "top_p": 0.95,
            "top_k": 64,
            "max_output_tokens": 8192,
            "response_mime_type": "text/plain",
        },
    )

    chat_session = model.start_chat(history=[])

    prompt = prompt_message + "\n\n".join(reviews)
    response = chat_session.send_message(prompt)
    return response.text

prompt_message = "Analyze the following reviews and summarize the key insights:"
insights = analyze_reviews(reviews, "AIzaSyDyaY-E5qui_dN0BvsabnOGo51I06vHlE8", prompt_message)

print(insights)

def analyze_basic_product(reviews, product_name):
    prompt_message = f"""Analyze these reviews for {product_name}:
    1. What are the top 3 most mentioned features?
    2. What do customers love most about this product?
    3. What are the most common complaints?

    Please provide specific examples from the reviews."""

    return analyze_reviews(reviews, "AIzaSyDyaY-E5qui_dN0BvsabnOGo51I06vHlE8", prompt_message)

product_reviews = df[df['product_attributes'].str.contains("Pill", case=False, na=False)]['content'].tolist()[:30]

basic_insights = analyze_basic_product(product_reviews, "Beats Pill Speaker")

print(basic_insights)

def analyze_sentiment_patterns(reviews, sentiment_category, product_name):
    prompt_message = f"""Analyze these {sentiment_category.lower()} reviews for {product_name}:
    1. What specific aspects create {sentiment_category.lower()} reactions?
    2. Identify common phrases or descriptions used
    3. Note any comparisons with competitor products
    4. Find unexpected or unique feedback

    Support your analysis with specific examples."""

    return analyze_reviews(reviews, "AIzaSyDyaY-E5qui_dN0BvsabnOGo51I06vHlE8", prompt_message)
positive_reviews = df[
    (df['product_attributes'].str.contains("Pill", case=False, na=False)) &
    (df['Sentiment'] == 'Positive')
]['content'].tolist()[:30]

positive_insights = analyze_sentiment_patterns(
    positive_reviews,
    'Positive',
    'Beats Pill Speaker'
)

print(positive_insights)

beats_reviews = df[df['product_attributes'].str.contains("Style: Pill", case=False, na=False)]['content'].tolist()[:20]
flip_reviews = df[df['product_attributes'].str.contains("Flip 5", case=False, na=False)]['content'].tolist()[:20]

products_to_compare = {
    "Beats Pill": beats_reviews,
    "JBL Flip 5": flip_reviews
}

comparison_insights = analyze_comparative_reviews(products_to_compare)
print(comparison_insights)

def analyze_feature(reviews, feature_name):
    prompt_message = f"""Analyze mentions of {feature_name} in these reviews:
    1. How do customers describe the {feature_name}?
    2. What specific aspects are praised or criticized?
    3. How does {feature_name} compare across products?
    4. What improvements do customers suggest?

    Include specific quotes and examples."""

    return analyze_reviews(reviews, "AIzaSyDyaY-E5qui_dN0BvsabnOGo51I06vHlE8", prompt_message)
battery_reviews = df[
    df['content'].str.contains("battery|charge|power", case=False, na=False)
]['content'].tolist()[:40]

battery_insights = analyze_feature(battery_reviews, "battery life")
print(battery_insights)

"""## PAIN POINTS
Battery Life is much shorter than advertised.
Battery drains even when speakers are off.
Some Speakers even are failing to charge

## STRENGTHS
Some users reported longer battery life under casual use.
Headphones can run for hours with minimal drop in battery
Works very well for short term use

## COMPARISONS
JBL Charge 5 has a better battery life compared to other models
Some users mentioned that Bose and Sony models are a tradeoff when it comes to sound vs battery
Beats Pill falls behind when it comes to charging reliability

##IMPROVEMENTS
Better battery optimization and longer usage time
Fix self draining issue when headphones aren't in use.
Improve overall durability for battery

| Category     | Finding                                      | Supporting Evidence                                           | Frequency/Impact                    |
|--------------|-----------------------------------------------|----------------------------------------------------------------|-------------------------------------|
| PAIN POINT   | Battery Life is  shorter than advertised | “At most 3 hours instead of 24 advertised”                     | Mentioned in several reviews        |
| STRENGTH     | Headphones can run for hours with minimal drop in battery | “Used for hours with only 20% battery loss”        | Reported in light-use situations    |
| COMPARISON   | JBL Charge 5 has a better battery life       | “JBL Charge 5 is better than this one”                         | Frequently mentioned                |
| IMPROVEMENT  | Better battery optimization and longer usage time | Customers expected longer usage based on product description | High priority improvement           |
"""