# -*- coding: utf-8 -*-
"""P3.S4.9

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CXhchamWYrEgjm7ANKvqZlQXWDxtvZ1M
"""

import pandas as pd
!pip install textblob
from textblob import TextBlob

df = pd.read_csv('merged_data.csv')
df.head()

from textblob import TextBlob

text = "The smartwatch is amazing, but the battery life could be better."
blob = TextBlob(text)

print(blob.sentiment)

##statement from dataset where textblob fails

text = "I would give this zero stars if I could. There is a known issue with the speakers not charging. The charge light blinks red three times and then nothing. No idea whether factory reset worked. Bought a new usb-c cable just to see whether the included cable was defective. Based on my Google searches, it seems that this is a regularly defective product. Do not buy from this distributor. I will never buy from this manufacturer ever again."
blob = TextBlob(text)

print(blob.sentiment)

text = 'Works fine with Apple. Better than other choices.'
blob = TextBlob(text)
print(blob.sentiment)

df['Polarity'] = df['content'].apply(lambda x: TextBlob(str(x)).sentiment.polarity)
df['Subjectivity'] = df['content'].apply(lambda x: TextBlob(str(x)).sentiment.subjectivity)

df[['content', 'Polarity', 'Subjectivity']].head()

import matplotlib.pyplot as plt

plt.figure(figsize=(8, 5))
plt.hist(df['Polarity'], bins=20, color='skyblue', edgecolor='black')
plt.title("Distribution of Polarity Scores")
plt.xlabel("Polarity")
plt.ylabel("Frequency")
plt.show()

import seaborn as sns

plt.figure(figsize=(8, 5))
sns.scatterplot(x='Polarity', y='Subjectivity', data=df, alpha=0.5)
plt.title("Polarity vs. Subjectivity")
plt.xlabel("Polarity")
plt.ylabel("Subjectivity")
plt.show()

def categorize_sentiment(polarity):
    if polarity > 0.2:
        return 'Positive'
    elif polarity < -0.2:
        return 'Negative'
    else:
        return 'Neutral'

df['Sentiment'] = df['Polarity'].apply(categorize_sentiment)
df['Sentiment'].value_counts()

from wordcloud import WordCloud
import matplotlib.pyplot as plt

positive_reviews = " ".join(df[df['Sentiment'] == 'Positive']['content'])

wordcloud = WordCloud(background_color='white', width=800, height=400).generate(positive_reviews)

plt.figure(figsize=(10, 5))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis('off')
plt.title("Word Cloud of Positive Reviews")
plt.show()

negative_reviews = " ".join(df[df['Sentiment'] == 'Negative']['content'])

if negative_reviews.strip():  # Only run if there are words
    wordcloud = WordCloud(background_color='white', width=800, height=400).generate(negative_reviews)

    plt.figure(figsize=(10, 5))
    plt.imshow(wordcloud, interpolation='bilinear')
    plt.axis('off')
    plt.title("Word Cloud of Negative Reviews")
    plt.show()
else:
    print("No negative reviews available to generate a word cloud.")

df.to_csv('sentiment_analysis_results.csv', index=False)

from google.colab import files
files.download('sentiment_analysis_results.csv')